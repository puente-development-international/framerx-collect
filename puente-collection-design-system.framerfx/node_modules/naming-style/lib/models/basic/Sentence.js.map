{"version":3,"sources":["../../../src/models/basic/Sentence.js"],"names":["Sentence","text","match","join","test","_fill","split","map","w","replace","s","s1","s2","toUpperCase","toLowerCase","pascal","hyphen","snake"],"mappings":";;;;;;;;;;IAAqBA,Q;;;;;;;0BACbC,I,EAAM;AACV,aAAOA,KAAKC,KAAL,CAAW,yBAAX,EAAsCC,IAAtC,CAA2C,GAA3C,CAAP;AACD;;;yBAEIF,I,EAAM;AACT,aAAO,kCAAiCG,IAAjC,CAAsCH,IAAtC;AAAP;AACD;;;2BAEMA,I,EAAM;AACX,aAAO,KAAKI,KAAL,CAAWJ,IAAX,EACJK,KADI,CACE,GADF,EAEJC,GAFI,CAEA;AAAA,eACHC,EAAEC,OAAF,CACE,aADF,EAEE,UAACC,CAAD,EAAIC,EAAJ,EAAQC,EAAR;AAAA,sBAAkBD,GAAGE,WAAH,EAAlB,GAAqCD,GAAGE,WAAH,EAArC;AAAA,SAFF,CADG;AAAA,OAFA,EAQJX,IARI,CAQC,EARD,CAAP;AASD;;;0BAEKF,I,EAAM;AACV,aAAO,KAAKc,MAAL,CAAYd,IAAZ,EAAkBQ,OAAlB,CAA0B,IAA1B,EAAgC;AAAA,eAAKC,EAAEI,WAAF,EAAL;AAAA,OAAhC,CAAP;AACD;;;2BAEMb,I,EAAM;AACX,aAAO,KAAKI,KAAL,CAAWJ,IAAX,EAAiBa,WAAjB,EAAP;AACD;;;0BAEKb,I,EAAM;AACV,aAAO,KAAKe,MAAL,CAAYf,IAAZ,EAAkBQ,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,CAAP;AACD;;;+BAEUR,I,EAAM;AACf,aAAOA,KAAKQ,OAAL,CAAa,eAAb,EAA8B,GAA9B,CAAP;AACD;;;6BAEQR,I,EAAM;AACb,aAAO,KAAKgB,KAAL,CAAWhB,IAAX,EAAiBY,WAAjB,EAAP;AACD;;;6BAEQZ,I,EAAM;AACb,aAAOA,KACJQ,OADI,CACI,eADJ,EACqB,EADrB,EAEJA,OAFI,CAEI,IAFJ,EAEU;AAAA,eAAKC,EAAEG,WAAF,EAAL;AAAA,OAFV,CAAP;AAGD;;;;;;kBA7CkBb,Q","file":"Sentence.js","sourcesContent":["export default class Sentence {\n  _fill(text) {\n    return text.match(/([0-9]+|[a-z]+|[A-Z]+)/g).join('-');\n  }\n\n  test(text) {\n    return /^[0-9a-zA-Z][^\\s]*(\\s[^\\s]+)+$/.test(text);\n  }\n\n  pascal(text) {\n    return this._fill(text)\n      .split('-')\n      .map(w =>\n        w.replace(\n          /^(\\w)(\\w*)$/,\n          (s, s1, s2) => `${s1.toUpperCase()}${s2.toLowerCase()}`\n        )\n      )\n      .join('');\n  }\n\n  camel(text) {\n    return this.pascal(text).replace(/^./, s => s.toLowerCase());\n  }\n\n  hyphen(text) {\n    return this._fill(text).toLowerCase();\n  }\n\n  snake(text) {\n    return this.hyphen(text).replace(/-/g, '_');\n  }\n\n  underscore(text) {\n    return text.replace(/[^0-9a-zA-Z]/g, '_');\n  }\n\n  constant(text) {\n    return this.snake(text).toUpperCase();\n  }\n\n  sentence(text) {\n    return text\n      .replace(/^[^0-9a-zA-Z]/, '')\n      .replace(/^./, s => s.toUpperCase());\n  }\n}\n"]}