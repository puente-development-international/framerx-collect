{"version":3,"sources":["../../../src/models/basic/Pascal.js"],"names":["Pascal","text","result","match","join","test","replace","s","toLowerCase","_fill","hyphen","snake","toUpperCase"],"mappings":";;;;;;;;;;IAAqBA,M;;;;;;;0BACbC,I,EAAM;AACV,UAAIC,SAASD,KAAKE,KAAL,CAAW,yBAAX,EAAsCC,IAAtC,CAA2C,GAA3C,CAAb;AACA,aAAO,YAAYC,IAAZ,CAAiBH,MAAjB,CAAP,EAAiC;AAC/BA,iBAASA,OAAOI,OAAP,CAAe,iBAAf,UAAT;AACD;AACD,aAAOJ,MAAP;AACD;;;yBAEID,I,EAAM;AACT,aAAO,qCAAoCI,IAApC,CAAyCJ,IAAzC;AAAP;AACD;;;0BAEKA,I,EAAM;AACV,aAAOA,KAAKK,OAAL,CAAa,IAAb,EAAmB;AAAA,eAAKC,EAAEC,WAAF,EAAL;AAAA,OAAnB,CAAP;AACD;;;2BAEMP,I,EAAM;AACX,aAAOA,IAAP;AACD;;;2BAEMA,I,EAAM;AACX,aAAO,KAAKQ,KAAL,CAAWR,IAAX,EACJK,OADI,CACI,wBADJ,EAC8B,MAD9B,EAEJE,WAFI,EAAP;AAGD;;;0BAEKP,I,EAAM;AACV,aAAO,KAAKS,MAAL,CAAYT,IAAZ,EAAkBK,OAAlB,CAA0B,IAA1B,EAAgC,GAAhC,CAAP;AACD;;;+BAEUL,I,EAAM;AACf,aAAO,KAAKU,KAAL,CAAWV,IAAX,CAAP;AACD;;;6BAEQA,I,EAAM;AACb,aAAO,KAAKU,KAAL,CAAWV,IAAX,EAAiBW,WAAjB,EAAP;AACD;;;6BAEQX,I,EAAM;AACb,aAAO,KAAKS,MAAL,CAAYT,IAAZ,EACJK,OADI,CACI,IADJ,EACU,GADV,EAEJA,OAFI,CAEI,IAFJ,EAEU;AAAA,eAAKC,EAAEK,WAAF,EAAL;AAAA,OAFV,CAAP;AAGD;;;;;;kBA3CkBZ,M","file":"Pascal.js","sourcesContent":["export default class Pascal {\n  _fill(text) {\n    let result = text.match(/([0-9]+|[a-z]+|[A-Z]+)/g).join('-');\n    while (/[A-Z]{2}/g.test(result)) {\n      result = result.replace(/([A-Z])([A-Z])/g, `$1-$2`);\n    }\n    return result;\n  }\n\n  test(text) {\n    return /^[A-Z][0-9a-z]*([A-Z][0-9a-z]*)+$/.test(text);\n  }\n\n  camel(text) {\n    return text.replace(/^./, s => s.toLowerCase());\n  }\n\n  pascal(text) {\n    return text;\n  }\n\n  hyphen(text) {\n    return this._fill(text)\n      .replace(/([0-9]|[A-Z])-([a-z])/g, '$1$2')\n      .toLowerCase();\n  }\n\n  snake(text) {\n    return this.hyphen(text).replace(/-/g, '_');\n  }\n\n  underscore(text) {\n    return this.snake(text);\n  }\n\n  constant(text) {\n    return this.snake(text).toUpperCase();\n  }\n\n  sentence(text) {\n    return this.hyphen(text)\n      .replace(/-/g, ' ')\n      .replace(/^./, s => s.toUpperCase());\n  }\n}\n"]}