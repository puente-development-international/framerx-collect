{"version":3,"sources":["../../../src/models/basic/Hyphen.js"],"names":["Hyphen","text","toLowerCase","split","test","_split","map","w","replace","s","s1","s2","toUpperCase","join","pascal","snake"],"mappings":";;;;;;;;;;IAAqBA,M;;;;;;;2BACZC,I,EAAM;AACX,aAAOA,KAAKC,WAAL,GAAmBC,KAAnB,CAAyB,IAAzB,CAAP;AACD;;;yBAEIF,I,EAAM;AACT,aAAO,4BAA2BG,IAA3B,CAAgCH,IAAhC;AAAP;AACD;;;2BAEMA,I,EAAM;AACX,aAAO,KAAKI,MAAL,CAAYJ,IAAZ,EACJK,GADI,CACA;AAAA,eACHC,EAAEC,OAAF,CACE,aADF,EAEE,UAACC,CAAD,EAAIC,EAAJ,EAAQC,EAAR;AAAA,sBAAkBD,GAAGE,WAAH,EAAlB,GAAqCD,GAAGT,WAAH,EAArC;AAAA,SAFF,CADG;AAAA,OADA,EAOJW,IAPI,CAOC,EAPD,CAAP;AAQD;;;0BAEKZ,I,EAAM;AACV,aAAO,KAAKa,MAAL,CAAYb,IAAZ,EAAkBO,OAAlB,CAA0B,IAA1B,EAAgC;AAAA,eAAKC,EAAEP,WAAF,EAAL;AAAA,OAAhC,CAAP;AACD;;;2BAEMD,I,EAAM;AACX,aAAOA,IAAP;AACD;;;0BAEKA,I,EAAM;AACV,aAAOA,KAAKO,OAAL,CAAa,IAAb,EAAmB,GAAnB,CAAP;AACD;;;+BAEUP,I,EAAM;AACf,aAAO,KAAKc,KAAL,CAAWd,IAAX,CAAP;AACD;;;6BAEQA,I,EAAM;AACb,aAAO,KAAKc,KAAL,CAAWd,IAAX,EAAiBW,WAAjB,EAAP;AACD;;;6BAEQX,I,EAAM;AACb,aAAOA,KAAKO,OAAL,CAAa,IAAb,EAAmB,GAAnB,EAAwBA,OAAxB,CAAgC,IAAhC,EAAsC;AAAA,eAAKC,EAAEG,WAAF,EAAL;AAAA,OAAtC,CAAP;AACD;;;;;;kBA1CkBZ,M","file":"Hyphen.js","sourcesContent":["export default class Hyphen {\n  _split(text) {\n    return text.toLowerCase().split(/-/g);\n  }\n\n  test(text) {\n    return /^[0-9a-z]+(-[0-9a-z]+)+$/.test(text);\n  }\n\n  pascal(text) {\n    return this._split(text)\n      .map(w =>\n        w.replace(\n          /^(\\w)(\\w*)$/,\n          (s, s1, s2) => `${s1.toUpperCase()}${s2.toLowerCase()}`\n        )\n      )\n      .join('');\n  }\n\n  camel(text) {\n    return this.pascal(text).replace(/^./, s => s.toLowerCase());\n  }\n\n  hyphen(text) {\n    return text;\n  }\n\n  snake(text) {\n    return text.replace(/-/g, '_');\n  }\n\n  underscore(text) {\n    return this.snake(text);\n  }\n\n  constant(text) {\n    return this.snake(text).toUpperCase();\n  }\n\n  sentence(text) {\n    return text.replace(/-/g, ' ').replace(/^./, s => s.toUpperCase());\n  }\n}\n"]}